strict_env

# extra support for fast loading of asdf tooling, reads from the .tool-versions
use asdf

# install extra standalone tooling

# TODO: example of this done outside of asdf just to show how it is
# done. ASDF should be used for everything we can.


# check for all required tooling

for tool in python node cargo; do
    has $tool || { echo "Missing tool: ${tool}"; exit 1; }
done

# required local customizations
source_env .envrc.private
# check for things in the private file
env_vars_required GH_TOKEN

# load optional settings
source_env_if_exists .envrc.custom

# handle the optional flags
if [ -z ${OPTIONAL_FLAG+x} ]; then
    echo "OPTIONAL_FLAG is unset"
else
    echo "OPTIONAL_FLAG is set to ${OPTIONAL_FLAG}"
fi


### Python

unset PYTHONPATH
path_add PYTHONPATH $(expand_path ./src)

## Virtual Environments
watch_file requirements.txt
python -m venv .venv

(source ./.venv/bin/activate &&
     pip install --upgrade pip &&
     pip install -r requirements.txt
)
